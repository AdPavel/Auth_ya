"""Initial migration.

Revision ID: d26691e9f4f6
Revises: 
Create Date: 2023-02-21 13:46:54.700978

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd26691e9f4f6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('login', sa.String(length=30), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('log_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=False),
    sa.Column('login_time', sa.DateTime(), nullable=False),
    sa.Column('user_device_type', sa.Text(), nullable=True),

    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_device_type'),
    sa.UniqueConstraint('id', 'user_device_type'),

    postgresql_partition_by='LIST (user_device_type)',
    )
    op.create_table('users_roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###
    op.execute(
        """CREATE TABLE IF NOT EXISTS "user_sign_in_smart" PARTITION OF "log_history" FOR VALUES IN ('smart')"""
    )
    op.execute(
        """CREATE TABLE IF NOT EXISTS "user_sign_in_mobile" PARTITION OF "log_history" FOR VALUES IN ('mobile')"""
    )
    op.execute(
        """CREATE TABLE IF NOT EXISTS "user_sign_in_pc" PARTITION OF "log_history" FOR VALUES IN ('pc')"""
    )
    op.execute(
        """CREATE TABLE IF NOT EXISTS "user_sign_in_tablet" PARTITION OF "log_history" FOR VALUES IN ('tablet')"""
    )
    op.execute(
        """CREATE TABLE IF NOT EXISTS "user_sign_in_bot" PARTITION OF "log_history" FOR VALUES IN ('bot')"""
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_roles')
    op.drop_table('log_history')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
